# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - master
#     paths-ignore:
#       - 'README.md'

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
#     env:
#       IMAGE_TAG: prod-${{ github.run_number }#}

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set lowercase image name
#         id: vars
#         run: |
#           IMAGE_NAME=ghcr.io/${GITHUB_REPOSITORY_OWNER,,}/django-todo
#           echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
#           echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT

#       - name: Log in to GitHub Container Registry
#         uses: docker/login-action@v3
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }#}
#           password: ${{ secrets.CR_PAT }#}

#       - name: Build and Push Docker image
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           push: true
#           tags: ${{ steps.vars.outputs.image_name }#}:${{ env.IMAGE_TAG }#}








name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'README.md'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: prod-${{ github.run_number }}
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/django-todo
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}



      # - name: Clone ArgoCD repository
      #   uses: actions/checkout@v3
      #   with:
      #     repository: Haze-me/argocd
      #     token: ${{ secrets.CHECKOUT_TOKEN }#}
      #     path: tescomp

      # - name: Update ArgoCD deployment.yaml
      #   run: |
      #     sed -i "s|image: .*$|image: $IMAGE_NAME:$IMAGE_TAG|g" tescomp/tescomp/django-auth.yaml

      # - name: Commit and push changes to ArgoCD repo
      #   run: |
      #     cd tescomp
      #     git config --global user.email "chriscrsov@gmail.com"
      #     git config --global user.name "chriscrsov"
      #     git add tescomp/django-auth.yaml
      #     git commit -m "Update image tag to $IMAGE_TAG"
      #     git push